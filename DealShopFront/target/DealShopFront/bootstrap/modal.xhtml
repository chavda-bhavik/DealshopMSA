<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://xmlns.jcp.org/jsf/passthrough">

            <ui:define name="content">
                <h1>Modals</h1>
                <p>Modals are streamlined, but flexible, dialog prompts with the minimum required functionality and smart defaults.</p>
                <p><strong>Modal options</strong></p>
                <p>You can specify a header with the <code>title</code> attribute. Modals have a dismiss button(a cross) in the upper right corner by default.</p>
                <p>The <code>&lt;b:modal&gt;</code> tag has also a facet with name <code>footer</code> where you can add buttons for dismissing the modal or for other actions.</p>
                <p>Notice that the <code>&lt;b:button&gt;</code> tag must have the <code>dismiss="modal"</code> attribute in order to dismiss the modal when clicked.</p>
                
                <h4>Triggering Modals</h4>
                <p>You have four ways to create a Button that triggers a Modal:</p>
                <ul>
                    <li>Using HTML markup - a styled <code>&lt;a&gt;</code> tag with href and data attributes.</li>
                    <li>Using HTML markup - a styled <code>&lt;button&gt;</code> tag with two data attributes.</li>
                    <li>Using JSF BootsFaces markup - a <code>&lt;b:button&gt;</code> tag with passthrough data attributes and a little javascript to prevent click event.</li>
                    <li>Using Javascript. This is the most flexible version: you can use arbitrary jQuery selectors instead of ids, and you aren't limited to buttons.</li>
                </ul>
                <p>Note: if your intendended use is to trigger a data submission that shows the results in a Modal, then have a look at the <h:link outcome="/forms/commandButton" value="commandButton"/> documentation.</p>
                <p>The following example shows you how to use the four kinds of trigger.</p>
                <p class="text-warning"><b>Overlapping modals is not supported:</b> be sure not to open a modal while another is still visible. Showing more than one modal at a time requires custom code.</p>
                
                
                <b:panel look="info">
                    <f:facet name="heading"><b>EXAMPLE - Triggering a modal which isn't inside a form</b></f:facet>
                    <b:modal id="amodal" title="Modal Example" styleClass="modalPseudoClass">
                        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>
                        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>
                        <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>
                        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>
                        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>
                        <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>
                        <f:facet name="footer">
                            <b:button value="close" dismiss="modal" onclick="return false;"/>
                            <b:button value="Ok" look="primary" dismiss="modal" onclick="return false;"/>
                        </f:facet>
                    </b:modal>
                    <b:row>
                        <b:column span="3">
                            <a id="atrigger" class="btn btn-primary btn-lg" href="#amodal" data-toggle="modal">Trigger (HTML A tag)</a>
                        </b:column>
                        <b:column span="3">
                            <button id="btrigger" class="btn btn-info btn-lg" data-target="#amodal" data-toggle="modal">Trigger (HTML Button)</button>
                        </b:column>
                        <b:column span="3">
                            <b:button value="Trigger (JSF passthrough)" look="warning" p:data-target="#amodal" p:data-toggle="modal" onclick="return false;" size="lg"/>
                        </b:column>
                        <b:column span="3">
                            <b:button value="Trigger (JavaScript)" look="success" onclick="$('.modalPseudoClass').modal();return false;" size="lg"/>
                        </b:column>
                    </b:row>

                    <f:facet name="footer">
                        <strong>Markup:</strong><br/>

                        <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
                            <![CDATA[
                            <b:modal id="amodal" title="Modal Example" styleClass="modalPseudoClass">
                                <p>Modal body</p>
                                <f:facet name="footer">
                                    <b:button value="close" dismiss="modal" onclick="return false;"/>
                                    <b:button value="Ok" look="primary" dismiss="modal" onclick="return false;"/>
                                </f:facet>
                            </b:modal>
                            <b:row>
                                <b:column span="3">
                                    <a id="atrigger" class="btn btn-primary btn-lg" href="#amodal" data-toggle="modal">Trigger (HTML A tag)</a>
                                </b:column>
                                <b:column span="3">
                                    <button id="btrigger" class="btn btn-info btn-lg" data-target="#amodal" data-toggle="modal">Trigger (HTML Button)</button>
                                </b:column>
                                <b:column span="3">
                                    <b:button value="Trigger (JSF passthrough)" look="warning" p:data-target="#amodal" p:data-toggle="modal" onclick="return false;" size="lg"/>
                                </b:column>
		                        <b:column span="3">
        		                    <b:button value="Trigger (JavaScript)" look="success" onclick="$('.modalPseudoClass').modal();return false;" size="lg"/>
                		        </b:column>
                            </b:row>
                            ]]></script>
                    </f:facet>
                </b:panel>
                
                <h4>Troubleshooting</h4>
                <p>Using <code>ids</code> is always a bit tricky in JSF. 
                Don't put your modal dialog into a form. If you do, be aware that the id is modified. The <code>href</code> of the <code>b:button</code> refers
                to the <code>id</code> in the HTML code, not to the <code>id</code> of the source code. JSF prepends the ids of the parent containers
                to the <code>id</code> of <code>b:modal</code>.</p>
                <p>In general, it's a better idea to use a pseudo CSS class instead of an <code>id</code>. That's a <code>styleClass</code> that may or may not have
                CSS instructions applied to it. Pure pseudo CSS classes don't influence the layout at all. They are simply a convenient alternative to ids. Instead
                of writing <code>href="#someId"</code> you can write <code>href=".somePseudoClass"</code>. JSF never modifies CSS class names, so they are a good
                alternative to using <code>ids</code>. However, you have to use some Javascript to activate the modal dialog using a CSS pseudo class, as the following example shows: </p>
                
                <b:panel look="info">
                    <f:facet name="heading"><b>EXAMPLE - Triggering a modal inside a form</b></f:facet>
                    <h:form id="myFormID">
	                    <b:modal id="amodal2" title="Modal Example" styleClass="modalPseudoClass2" 
	                             closable="false"  close-on-escape="false" backdrop="false">
	                        <p>Far far away, behind the word mountains, far from the
								countries Vokalia and Consonantia, there live the blind texts.
								Separated they live in Bookmarksgrove right at the coast of the
								Semantics, a large language ocean. A small river named Duden flows
								by their place and supplies it with the necessary regelialia. It
								is a paradisematic country, in which roasted parts of sentences
								fly into your mouth. Even the all-powerful Pointing has no control
								about the blind texts it is an almost unorthographic life. One day
								however a small line of blind text by the name of Lorem Ipsum
								decided to leave for the far World of Grammar. The Big Oxmox
								advised her not to do so, because there were thousands of bad
								Commas, wild Question Marks and devious Semikoli, but the Little
								Blind Text didnâ€™t listen. She packed her seven versalia, put her
								initial into the belt and made herself on the way. When she
								reached the first hills of the Italic Mountains, she had a last
								view back on the skyline of her hometown Bookmarksgrove, the
								headline of Alphabet Village and the subline of her own road, the
								Line Lane.
							</p>
	                        <f:facet name="footer">
	                            <b:button value="close" dismiss="modal" onclick="return false;"/>
	                            <b:button value="Ok" look="primary" dismiss="modal" onclick="return false;"/>
	                        </f:facet>
	                    </b:modal>
                    </h:form>
                    <b:row>
                        <b:column span="3">
                            <b:button value="Trigger (JavaScript)" look="success" onclick="$('.modalPseudoClass2').modal();return false;" size="lg"/>
                        </b:column>
                    </b:row>

                    <f:facet name="footer">
                        <strong>Markup:</strong><br/>

                        <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
                            <![CDATA[
                            <b:modal id="amodal" title="Modal Example" styleClass="modalPseudoClass" 
                                     closable="false" close-on-escape="false" backdrop="false">
                                <p>Modal body</p>
                                <f:facet name="footer">
                                    <b:button value="close" dismiss="modal" onclick="return false;"/>
                                    <b:button value="Ok" look="primary" dismiss="modal" onclick="return false;"/>
                                </f:facet>
                            </b:modal>
                            <b:row>
		                        <b:column span="3">
        		                    <b:button value="Trigger (JavaScript)" look="success" onclick="$('.modalPseudoClass').modal();return false;" size="lg"/>
                		        </b:column>
                            </b:row>
                            ]]></script>
                    </f:facet>
                </b:panel>
                
                <h4><code>closable</code> and <code>backdrop</code></h4>
                <p>By default, there's a x symbol which allows the user to close the modal. Set <code>closable="false"</code> to suppress the close icon.
                Users can close modal dialogs by hitting the ESC key unless you set <code>close-on-escape="false"</code>.
                Another default behavior of modal is that you can close a modal dialog by clicking somewhere outside the modal. Set <code>backdrop="false"</code> to disable this feature.
                </p>
                
                <h4>Opening a modal dialog when entering the JSF view</h4>
                <p>If you don't want to open the modal dialog when a button is clicked, but already when the JSF view is opened, you can use an inline script to open the dialog programmatically:</p>
                <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
                <![CDATA[
					&lt;script type="text/javascript"> 
                          $(window).load(function(){ $('.modalPseudoClass').modal('show'); }); 
                    &lt;/script>
                ]]>
				</script>
				Alternatively, you can use the pass-through attributes that have been introduced with JSF 2.2:
                <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
                <![CDATA[
                    <?xml version='1.0' encoding='UTF-8' ?>
                    <!DOCTYPE html>
                    <html xmlns="http://www.w3.org/1999/xhtml"
                          xmlns:h="http://java.sun.com/jsf/html"
                          xmlns:f="http://java.sun.com/jsf/core"
                          xmlns:b="http://bootsfaces.net/ui"
                          xmlns:ui="http://java.sun.com/jsf/facelets"
                          xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
                          >
                        <h:head />
                        <h:body pt:onload="alert(1)">
                    		...
                        </h:body>
                    </html>
                ]]>
				</script>
				<p>However, adding the pass-through attribute <code>pt:data-show="false"</code> doesn't work at the moment (BootsFaces 0.6.7).</p>
                
                <b:panel look="info">
				<f:facet name="heading">
					<b>Attributes of &lt;b:modal &gt;</b>
				</f:facet>
					<table class="table table-striped table-hover"
						style="background-color: #fff">
						<thead>
							<tr>
								<th>Attribute</th>
								<th>Default value</th>
								<th>Description</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>id</td>
								<td>(none)</td>
								<td>Unique identifier of the component.</td>
							</tr>
							<tr>
								<td>title</td>
								<td>(none)</td>
								<td>Bold Title displayed in Modal's header.</td>
							</tr>
							<tr>
								<td>styleClass</td>
								<td>(none)</td>
								<td>CSS style class which is applied to the entire modal dialog.
								</td>
							</tr>
							<tr>
								<td>rendered</td>
								<td>true</td>
								<td>If <code>rendered == false</code>, the modal won't be generated. Note that doesn't mean it's simply invisible. Instead,
								it's not part of the HTML code.
								</td>
							</tr>
							<tr>
								<td>closable</td>
								<td>(none)</td>
								<td>By default, there's a x symbol which allows the user to close the modal. Set <code>closable="false"</code> to suppress the close icon.
								</td>
							</tr>
							<tr>
								<td>backdrop</td>
								<td>(none)</td>
								<td>By default, you can close a modal dialog by clicking somewhere outside the modal. Set <code>backdrop="false"</code> to disable this feature.
								</td>
							</tr>
							<tr>
								<td>close-on-escape</td>
								<td>(none)</td>
								<td>By default, users can close modal dialogs by hitting the ESC key. Set <code>close-on-escape="false"</code> to disable this feature.
								</td>
							</tr>
							<tr>
								<td>size</td>
								<td>(none)</td>
								<td>Modal's size. Possible values are <code>modal-sm</code> and <code>modal-lg</code>.</td>
							</tr>
						</tbody>
					</table>
			</b:panel>

            <b:panel look="info">
				<f:facet name="heading">
					<b>Facets of &lt;b:modal &gt;</b>
				</f:facet>
					<p>The optional facet <code>footer</code> can be used to display buttons below a horizontal ruler, as shown in the example above.</p>
			</b:panel>                
                
                <br/> <br/>       
                
                <script type="text/javascript">
                    SyntaxHighlighter.all();
                </script>
                
            </ui:define>
</ui:composition>