<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://bootsfaces.net/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets"
    template="/applayout/pageTemplate.xhtml">

	<ui:define name="content">
		<h1>TabView and Tab</h1>
		<p>Add quick, dynamic tab functionality to transition through
			panes of local content.</p>
		<p>You can have also complex content in your tabs like the
			thumbnail in the third tab:</p>

<h:form id="tabform">
		<b:tabView activeIndex="#{testBean.index}" contentStyle="height:500px">
			<b:tab title="First tab" contentStyle="padding:20px;border-right:1px solid;border-left:1px solid;border-bottom:1px solid;border-color:#e8e8e8">
				<p>This is the first tab.</p>
				<p>Cras justo odio, dapibus ac facilisis in, egestas eget quam.
					Donec id elit non mi porta gravida at eget metus. Nullam id dolor
					id nibh ultricies vehicula ut id elit.</p>
			</b:tab>
			<b:tab title="Another tab" contentStyle="padding:20px;border-right:1px solid;border-left:1px solid;border-bottom:1px solid;border-color:#e8e8e8">
				<p>This is the second tab.</p>
				<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
					do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
				<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco
					laboris nisi ut aliquip ex ea commodo consequat.</p>
				<p>Duis aute irure dolor in reprehenderit in voluptate velit
					esse cillum dolore eu fugiat nulla pariatur.</p>
				<p>Excepteur sint occaecat cupidatat non proident, sunt in
					culpa qui officia deserunt mollit anim id est laborum.</p>
			</b:tab>
            <!-- The next tab shows tabs aren't limited to text. You can put anything in a tab. -->
			<b:tab title="Image tab">
				<br />
				<b:thumbnail>
				<div style="float:left;padding:20px">
					<img width="640" height="428"
						src="https://farm4.staticflickr.com/3093/2573064842_d497899887_z.jpg?zz=1"
						alt="2008-0608 (7119) Ulun Danu Temple by Jennifer, on Flickr" />
				</div>
				<div style="height:450px">
						<h3>Ulun Danu Beratan Temple</h3>
						<p>Ulun Danu Temple is a Balinese Hindu Temple located at
							Candi Kuning countryside. It is set at lakeside of Beratan with
							beautiful lake view and hills surround it. It is situated in the
							plateau area with cool atmosphere surround it and hills as a
							backdrop.</p>
							</div>
				</b:thumbnail>
			</b:tab>
			<b:tab title="Fancy tab" contentStyle="padding:20px;border-right:1px solid;border-left:1px solid;border-bottom:1px solid;border-color:#e8e8e8">
			   <f:facet name="anchor"><b:iconAwesome name="cog" spin="true" /></f:facet>
				<p>This is the fourth tab. As you can see, you can add arbitrary content to the tab title. In particular, you can add images.</p>
				<p>You can achieve this by defining a facet called <code>anchor</code>:</p>
				<b:well>
				<script type="syntaxhighlighter"
					class="brush: xml; toolbar: false;first-line: 1">
                            <![CDATA[
<b:tab title="Fancy tab">
   <f:facet name="anchor"><b:iconAwesome name="cog" spin="true" /></f:facet>
   Content of the tab.
</b:tab>
					]]></script>
					</b:well>
				<p>However, this fancy tab is an example how to create an unruly design. Don't use too many visual effects.</p>
			</b:tab>

		</b:tabView>
		<br />
		<p>Optionally, your server-side bean can define which tab is shown. You can achieve this by using the property <code>activeIndex</code>.
		For instance, the example above uses <code>activeIndex="#{testBean.index}"</code>, which enables use to open the next tab by clicking a command button.
		However, as soon as the user clicks a tab themselves, the connection to the back-end bean is lost.</p>
		<b:commandButton actionListener="#{testBean.nextTab}" value="next tab"/>
		</h:form>
		
		<h3>Persistent tab selection</h3>
		<p>By default, the first tab is opened, or the tab defined by <code>activeIndex</code>. This also holds true after a postback (i.e. after 
		clicking a command button that shows the current JSF page again), unless you put the <code>&lt;b:tabView /&gt;</code>
		into the same form as the button.</p>
		<p>After a page reload (<kbd>F5</kbd> or <kbd>CTRL+R</kbd>) the initial state is always shown. That's because JSF considers
		page reloads as a sort of a reset. Everything that's stored in the <code>ViewScope</code> is lost.</p>

		<b:panel look="info">
			<f:facet name="heading">
				<b>Markup:</b>
			</f:facet>
				<script type="syntaxhighlighter"
					class="brush: xml; toolbar: false;first-line: 1">
                            <![CDATA[
                            <b:tabView activeIndex="2">
                                <b:tab title="First Tab">
                                    <p>This is the first tab.</p>
                                </b:tab>
                                <b:tab title="Another Tab">
                                    <p>This is the second tab.</p>
                                </b:tab>
                                <!-- The next tab shows tabs aren't limited to text. You can put anything in a tab. -->
								<b:tab title="Image Tab">
                                  ...
                                </b:tab>
								<b:tab title="Fancy tab">
			   						<f:facet name="anchor"><b:iconAwesome name="cog" spin="true" /></f:facet>
                                    <p>This is fancy tab with a spinning image.</p>
                                </b:tab>

                            </b:tabView>
                            

                            ]]></script>
		</b:panel>
		<b:panel look="info">
			<f:facet name="heading">
				<b>Attributes of &lt;b:tabView&gt;</b>
			</f:facet>
				<table class="table table-striped table-hover"
					style="background-color: #fff">
					<thead>
						<tr>
							<th>Attribute</th>
							<th>Default value</th>
							<th>Description</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>activeIndex</td>
							<td>0</td>
							<td>Index of the active tab. Note that the first tab has
								the index 0.</td>
						</tr>
						<tr>
							<td>styleClass</td>
							<td>(none)</td>
							<td>CSS class to be applied to the tabs. Note that
								styleClass does not influence the content area.</td>
						</tr>
						<tr>
							<td>contentClass</td>
							<td>(none)</td>
							<td>CSS class to be applied to the content area.</td>
						</tr>
						<tr>
							<td>contentStyle</td>
							<td>(none)</td>
							<td>Inline CSS style to be applied to the content area.</td>
						</tr>
						<tr>
							<td>role</td>
							<td>(none)</td>
							<td>The role attribute describes the semantical role of the
								element. This attribute is added both to the tab area and the content area.</td>
						</tr>
						<tr>
							<td>style</td>
							<td>(none)</td>
							<td>CSS style. Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>onclick</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>ondblclick</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>onblur</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>onmousedown</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>onmousemove</td>
							<td>(none)</td>
							<td>Javascript event handler.  Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>onmouseout</td>
							<td>(none)</td>
							<td>CSS style. Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>onmouseover</td>
							<td>(none)</td>
							<td>CSS style. Is applied to the tab area.</td>
						</tr>
						<tr>
							<td>onmouseup</td>
							<td>(none)</td>
							<td>CSS style. Is applied to the tab area.</td>
						</tr>
					</tbody>
				</table>
		</b:panel>

		<b:panel look="info">
			<f:facet name="heading">
				<b>Attributes of &lt;b:tab&gt;</b>
			</f:facet>
				<table class="table table-striped table-hover"
					style="background-color: #fff">
					<thead>
						<tr>
							<th>Attribute</th>
							<th>Default value</th>
							<th>Description</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>title</td>
							<td>(none)</td>
							<td>The caption of the tab.</td>
						</tr>
						<tr>
							<td>role</td>
							<td>(none)</td>
							<td>The role attribute describes the semantical role of the
								element.</td>
						</tr>
						<tr>
							<td>id</td>
							<td>(none)</td>
							<td>Unique identifier of the component. Note that the colons are replaced by underscores to accommodate the requirements of jQuery.</td>
						</tr>
						<tr>
							<td>style</td>
							<td>(none)</td>
							<td>CSS style. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>tabindex</td>
							<td>(none)</td>
							<td>Determines in which order element get the focus when activated via the TAB or Shift+TAB key. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>onclick</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>ondblclick</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>onblur</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>onmousedown</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>onmousemove</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>onmouseout</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>onmouseover</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
						<tr>
							<td>onmouseup</td>
							<td>(none)</td>
							<td>Javascript event handler. Is applied to the anchor tag (i.e. <code>&lt;a /&gt;</code>) within the tab.</td>
						</tr>
					</tbody>
				</table>
		</b:panel>


		<b:panel look="info">
			<f:facet name="heading">
				<b>Skinning</b>
			</f:facet>
			<p>
			   &lt;b:tabView&gt; and &lt;b:tab&gt; use the standard Bootstrap CSS classes as defined by <a
					target="#" href="http://getbootstrap.com/javascript/#tabs">the
					Bootstrap documentation</a>:
			   </p>
			   <p>The entire tab (tab strip and content area) is surrounded by a div bearing the CSS class <code>tab-panel</code>.</p>
			   <p>The tab area bears the CSS classes <code>nav</code> and <code>nav-tabs</code>.</p>
			   <p>The content area bears the CSS class <code>tab-content</code>.</p>
			   <p>The individual tab panes in the content area bear the CSS class <code>tab-pane</code>.</p>
		</b:panel>


		<script type="text/javascript">
                SyntaxHighlighter.all();
            </script>
		<br />
		<br />
		<br />
		<br />

	</ui:define>
</ui:composition>
