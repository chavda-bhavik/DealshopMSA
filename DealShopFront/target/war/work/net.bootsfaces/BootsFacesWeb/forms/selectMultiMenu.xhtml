<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets">

            <ui:define name="content">
                <style>td {padding: 8px;}</style>
                <h1>Multiple Choice Combobox (&lt;b:selectMultiMenu&gt;)</h1>
                <p>This is a special combobox that allows you to select an arbitrary number of item without sacrificing a lot of screen estate.</p>
                <p>Both the values and the labels of the items are expected to be strings. If the user selects more than one item,
                the combobox displays every selected label separated by commas. Likewise, the value of the combobox is a comma-separated list
                of the item values. You can see both effects in the live demo below.</p>

                <h1>Kudos</h1>
                <p>This widget is based on the <a target="#" href="http://davidstutz.github.io/bootstrap-multiselect/">Bootstrap Multiselect</a> widget written by David Stutz.</p>

                <h1>License</h1>
                <p>The original widget is available both under the Apache V2 license and the BSD 3-Clause License. Please note that this is a different license than BootsFaces itself,
                which has been put under a GPL V3 license (or - at your option - any later version).</p>

                <h1>Basic usage</h1>
        <h:form>
            <b:tabView activeIndex="1">
                <b:tab title="JSF markup">
                    <b:well>
                        <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
        <h:form>
	        <b:panelGrid colSpans="2,2,2,2,4">
	        	<h:outputLabel value="Select your car's brand:" for="brandID" />
			    <b:selectMultiMenu value="&num;{carBean.brand}" id="brandID" >
				    <f:selectItem itemLabel="Fiat" itemValue="1"/>
				    <f:selectItem itemLabel="Honda" itemValue="2"/>
				    <f:selectItem itemLabel="Opel" itemValue="3"/>
			    </b:selectMultiMenu>
			    <h:message for="brandID"/>
			    <h:outputLabel value="last submitted value:" for="brandOutputID"/>
			    <b:inputText value="&num;{carBean.brand}" disabled="true" id="brandOutputID"/>
	        	<h:outputLabel value="Select your car's type:" for="typeID" />
			    <b:selectMultiMenu value="&num;{carBean.type}" id="typeID" required="true">
			    		<f:selectItem itemLabel="Cinquecento" itemValue="1"/>
					    <f:selectItem itemLabel="Civic" itemValue="2"/>
					    <f:selectItem itemLabel="Astra" itemValue="3"/>
			    </b:selectMultiMenu>
			    <h:message for="typeID"/>
			    <h:outputLabel value="last submitted value:" for="typeOutputID" />
			    <b:inputText value="&num;{carBean.type}" disabled="true" id="typeOutputID"/>
		    </b:panelGrid>
            <b:commandButton value="Submit"/>
        </h:form>
]]>
       </script>
                    </b:well>
                </b:tab>
                <b:tab title="displayed as">
                    <b:well>
                        <b:panelGrid colSpans="2,2,2,2,4">
                            <h:outputLabel value="Select your car's brand:" for="brandID" id="l1" />
                            <b:selectMultiMenu value="#{carBean.brand}" id="brandID">
                                <f:selectItem itemLabel="Fiat" itemValue="1" />
                                <f:selectItem itemLabel="Honda" itemValue="2" />
                                <f:selectItem itemLabel="Opel" itemValue="3" />
                            </b:selectMultiMenu>
                            <h:message for="brandID" />
                            <h:outputLabel value="last submitted value:" for="brandOutputID" />
                            <b:inputText value="#{carBean.brand}" disabled="true" id="brandOutputID" />
                            <h:outputLabel value="Select your car's type:" for="typeID" />
                            <b:selectMultiMenu value="#{carBean.type}" id="typeID" required="true">
                                <f:selectItem itemLabel="Cinquecento" itemValue="1" />
                                <f:selectItem itemLabel="Civic" itemValue="2" />
                                <f:selectItem itemLabel="Astra" itemValue="3" />
                                <f:selectItem itemLabel="Megane" itemValue="4" />
                            </b:selectMultiMenu>
                            <h:message for="typeID" />
                            <h:outputLabel value="last submitted value:" for="typeOutputID" />
                            <b:inputText value="#{carBean.type}" disabled="true" id="typeOutputID" />
                        </b:panelGrid>
                        <b:commandButton value="Submit"/>
                    </b:well>
                </b:tab>
            </b:tabView>
        </h:form>

        <h1>AJAX</h1>
        <p>As of BootsFaces 0.7.0, AJAX doesn't seem to work with the multiple-choice combobox. In theory it should work, but there's an issue with the example above, so we can't say for sure it works in your application.</p>
        
        <h1>Options</h1>

		<b:panelGrid colSpans="3,3,6">
			<h:outputText value="radiobuttons" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                radiobuttons="true">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Converts the multiple-choice widget into a single-choice combobox."/>
		
			<h:outputText value="maxHeight" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                maxHeight="70">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Maximum height of the options panel."/>
            
            <h:outputText value="nonSelectedText" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                nonSelectedText="Please select!">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Text which is displayed if no option has been selected."/>
            
            <h:outputText value="nSelectedText, numberDisplayed" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                nSelectedText="Too many choices!" numberDisplayed="1">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Maximum number of options displayed in the button. Text which is displayed if more than numberDisplayed options have been selected."/>
            
            <h:outputText value="allSelectedText" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                allSelectedText="everything selected">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Text which is displayed if every option has been selected."/>
            
            <h:outputText value="includeSelectAllOption" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                includeSelectAllOption="true">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="If true, you can select every option with a single click."/>
            
            <h:outputText value="selectAllText" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                includeSelectAllOption="true" selectAllText="click to chose everything">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="The text displayed for the select all option."/>
            
            <h:outputText value="enableFiltering, filterPlaceholder" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                enableFiltering="true" filterPlaceholder="type to filter">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Set to true or false to enable or disable the filter. A filter input will be added to dynamically filter all options. The placeholder used for the filter input."    />
			
			<h:outputText value="enableFiltering, enableCaseInsensitiveFiltering, filterPlaceholder" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                enableFiltering="true" enableCaseInsensitiveFiltering="true" filterPlaceholder="type to filter">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Set to true or false to enable or disable the filter. A filter input will be added to dynamically filter all options. The placeholder used for the filter input."    />
			
			<h:outputText value="dropRight" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                dropRight="true" buttonWidth="250">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Moves the drop-down-area from the left hand side to the right hand side."    />
			
			<h:outputText value="disableIfEmpty" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                disableIfEmpty="true">
            </b:selectMultiMenu>
			<h:outputText value="If true, the button is disabled if no options are given."    />

			<h:outputText value="onchange" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                onchange="function(option, checked, select) {console.log('changed option ' + $(option).val())}">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Client side callback to execute when input element loses focus and its value has been modified since gaining focus."    />

			<h:outputText value="ondropdownshow" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                ondropdownshow="function(event) {console.log('shown')}">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Client side callback called when the drop-down area is shown."    />

			<h:outputText value="ondropdownhide" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                ondropdownhide="function(event) {console.log('hidden')}">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Client side callback called when the drop-down area is hidden."    />

			<h:outputText value="buttonClass" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                buttonClass="btn btn-link">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="The CSS class of the button."    />

			<h:outputText value="styleClass" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                styleClass="navbar-inverse">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="Style class of the input element. Is translated to the buttonContainer attribute."    />

			<h:outputText value="buttonWidth" />
            <b:selectMultiMenu value="#{carBean.brand}" 
                buttonWidth="250">
                 <f:selectItem itemLabel="Fiat" itemValue="1" />
                 <f:selectItem itemLabel="Honda" itemValue="2" />
                 <f:selectItem itemLabel="Opel" itemValue="3" />
            </b:selectMultiMenu>
			<h:outputText value="The width of the multiselect button may be fixed using this option."    />
			
			
        </b:panelGrid>
        
        
        
        <h1>Append and prepend</h1>
    <p>You can use the <code>prepend</code> facet to put an element seamlessly in front of the multiple choice combobox. However, the <code>append</code> facet
    doesn't work yet. It is displayed, but not seamlessly next to the combobox.</p>
        
<b:tabView activeIndex="0">
    <b:tab title="JSF markup">
                    <b:well>
    
       <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
                <b:selectMultiMenu value="#{carBean.type}" required="true" label="Select an E-Mail-Address">
	                <f:facet name="prepend">
	                    <h:outputText value="@" />
	                </f:facet>
	                <f:facet name="append">
                        <!-- append doesn't work correctly! -->
	                    <h:outputText value=".com" />
	                </f:facet>
	                
                    <f:selectItem itemLabel="gmail" itemValue="1" />
                    <f:selectItem itemLabel="github" itemValue="2" />
                </b:selectMultiMenu>
]]>
       </script>
       </b:well>
       </b:tab>
       <b:tab title="live preview" contentStyle="height:248px">
       <b:well style="height:248px">
                <b:selectMultiMenu value="#{carBean.type}" required="true" label="Select an E-Mail-Address">
	                <f:facet name="prepend">
	                    <h:outputText value="@" />
	                </f:facet>
	                <f:facet name="append">
	                    <h:outputText value=".com" />
	                </f:facet>
	                
                    <f:selectItem itemLabel="gmail" itemValue="1" />
                    <f:selectItem itemLabel="github" itemValue="2" />
                </b:selectMultiMenu>
                </b:well>
       </b:tab>
       </b:tabView>
        
        <h1>Objects and converters</h1>
        <p><code>&lt;b:selectMultiMenu&gt;</code> only works with strings. The value must not be any other datatype. So don't bother with converters -
        we officially don't support them.</p>
        
        <h1>Arrays and HashMaps</h1>
        <p>The list of items can be defined as an <code>&lt;f:selectItems /&gt;</code> tag. BootsFaces uses a modified version of the 
        algorithm PrimeFaces 5.1 uses to implement <code>&lt;f:selectItems /&gt;</code>. As a result, you can use <code>&lt;b:selectMultiMenu&gt;</code>
        almost the same way as <code>&lt;prime:selectOneMenu&gt;</code>. </p>
        <h:form>
<b:tabView activeIndex="0">
    <b:tab title="JSF markup">
                    <b:well>
    
       <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
	        <b:panelGrid colSpans="2,2,8">
	        	<h:outputLabel value="Traffic light color" />
			    <b:selectMultiMenu value="&num;{semaphoreBean.color}"  >
		    		<f:selectItems value="&num;{semaphoreBean.colors}" var="c" itemValue="&num;{c}" itemLabel="&num;{c}"/>
			    </b:selectMultiMenu>
			    <h:outputLabel value="" />
			    <h:outputLabel value="Traffic light meaning" />
			    <b:selectMultiMenu value="&num;{semaphoreBean.meaning}"  >
		    		<f:selectItems value="&num;{semaphoreBean.meanings}"/>
			    </b:selectMultiMenu>
			    <h:outputLabel value="" />
		    </b:panelGrid>
]]>
       </script>
       </b:well>
    </b:tab>
    <b:tab title="Java bean">
                <b:well>
       <script type="syntaxhighlighter" class="brush: java; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
@javax.faces.bean.RequestScoped
@ManagedBean
public class SemaphoreBean {
	@NotNull
	private String color = null;

	@NotNull
	private String meaning = null;

	private List<String> colors;

	private Map<String, String> meanings;

	public String getColor() {
		return color;
	}

	public void setColor(String color) {
		this.color = color;
	}

	public String getMeaning() {
		return meaning;
	}

	public void setMeaning(String meaning) {
		this.meaning = meaning;
	}

	public List<String> getColors() {
		return colors;
	}

	public void setColors(List<String> colors) {
		this.colors = colors;
	}

	public Map<String, String> getMeanings() {
		return meanings;
	}

	public void setMeanings(Map<String, String> meanings) {
		this.meanings = meanings;
	}

	{
		colors = Arrays.asList("green", "yellow", "red");
		meanings = new HashMap<String, String>();
		meanings.put("go", "green");
		meanings.put("be alert", "yellow");
		meanings.put("stop", "red");
	}
}
]]>
       </script>
       </b:well>)
    </b:tab>
    
    
    <b:tab title="displayed as">
                <b:well>
	        <b:panelGrid colSpans="2,2,8">
	        	<h:outputLabel value="Traffic light color" />
			    <b:selectMultiMenu value="#{semaphoreBean.color}"  >
		    		<f:selectItems value="#{semaphoreBean.colors}" var="c" itemValue="#{c}" itemLabel="#{c}"/>
			    </b:selectMultiMenu>
			    <h:outputLabel value="" />
			    <h:outputLabel value="Traffic light meaning" />
			    <b:selectMultiMenu value="#{semaphoreBean.meaning}"  >
		    		<f:selectItems value="#{semaphoreBean.meanings}"/>
			    </b:selectMultiMenu>
			    <h:outputLabel value="" />
		    </b:panelGrid>
            </b:well>
    </b:tab>
</b:tabView>
        </h:form>
        
        
        
                <h1>Labels as captions above the combobox</h1>
                <p>By default, BootsFaces displays the label above the input field. However, in the case of the multiple choice combobox,
                we didn't implement this feature yet.</p>
                <ui:remove>
                <!-- 
                
<b:tabView>
  <b:tab title="JSF markup">
                  <b:well>
  
    <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
    <h:form>
    	<h:panelGrid columns="4" cellpadding="5">
		    <b:selectMultiMenu value="&num;{carBean.brand}" label="Select your car's brand:">
				    <f:selectItem itemLabel="Fiat" itemValue="1"/>
				    <f:selectItem itemLabel="Honda" itemValue="2"/>
				    <f:selectItem itemLabel="Opel" itemValue="3"/>
		    </b:selectMultiMenu>
		    <h:message for="brandID"/>
		    <b:inputText value="&num;{carBean.brand}" disabled="true" label="last submitted value:"/>
		    <b:selectMultiMenu value="&num; {carBean.type}" label="Select your car's type:" id="typeID">
		    		<f:selectItem itemLabel="Cinquecento" itemValue="1"/>
				    <f:selectItem itemLabel="Civic" itemValue="2"/>
				    <f:selectItem itemLabel="Astra" itemValue="3"/>
		    </b:selectMultiMenu>
		    <h:message  for="typeID" />
		    <b:inputText value="&num;{carBean.type}" disabled="true" label="last submitted value:"/>
        </h:panelGrid>
    </h:form>
]]>
    </script>
    </b:well>
  </b:tab>
  <b:tab title="displayed as">
                  <b:well>
  
    <h:form>
    	<h:panelGrid columns="3"  cellpadding="5">
		    <b:selectMultiMenu value="# {carBean.brand}" label="Select your car's brand:" id="brandID2">
				    <f:selectItem itemLabel="Fiat" itemValue="1"/>
				    <f:selectItem itemLabel="Honda" itemValue="2"/>
				    <f:selectItem itemLabel="Opel" itemValue="3"/>
		    </b:selectMultiMenu>
		    <h:message showSummary="false"  for="brandID2"/>
		    <b:inputText value="#{carBean.brand}" disabled="true" label="a last submitted value:"/>
		    <b:selectMultiMenu value="#{carBean.type}" label="Select your car's type:" id="typeID2">
		    		<f:selectItem itemLabel="Cinquecento" itemValue="1"/>
				    <f:selectItem itemLabel="Civic" itemValue="2"/>
				    <f:selectItem itemLabel="Astra" itemValue="3"/>
		    </b:selectMultiMenu>
		    <h:message for="typeID2"/>
		    <b:inputText value="#{carBean.type}" disabled="true" label="b last submitted value:"/>
        </h:panelGrid>
    </h:form>
  </b:well>
  </b:tab>
</b:tabView>
              
                <p>The label is displayed above the combobox</p>
                 -->
                </ui:remove>
				<br />
				<br />
				<ui:include src="SelectMultiMenuAttributes.xhtml" />
                			<b:panel look="info">
			</b:panel>
            <b:panel look="info">
				<f:facet name="heading">
					<b>Skinning</b>
				</f:facet>
				<ul>
					<li>
				   		The combobox is a <code>select</code> tag bearing the CSS-class <code>form-control</code>.
				   </li>
				   <li>
				   		If the attribute <code>required</code> is true, the pseudo CSS class <code>bf-required</code> is added. Thus you can define your custom style for required fields.
				   </li>
				  </ul> 
			</b:panel>
                
                <script type="text/javascript">
                    SyntaxHighlighter.all();
                </script>
                <br/><br/><br/><br/>
            </ui:define>
</ui:composition>
